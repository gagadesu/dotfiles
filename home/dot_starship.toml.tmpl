"$schema" = 'https://starship.rs/config-schema.json'
add_newline = false
command_timeout = 1500

format = """
{{- if ne .hostname "mbp" }}
$os\
{{- end }}
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$aws\
$c\
$cmake\
$conda\
$docker_context\
$gcloud\
$golang\
$java\
$kotlin\
$kubernetes\
$lua\
$nix_shell\
$nodejs\
$package\
$php\
$python\
$rlang\
$ruby\
$rust\
$swift\
$terraform\
\n$character
"""
right_format = """$time"""

[os]
format = '[$symbol](bold white) '   
disabled = false

[os.symbols]
Amazon = ''
Android = ''
Arch = ''
CentOS = ''
Debian = ''
Fedora = ''
FreeBSD = ''
Macos = ''
NixOS = ''
openSUSE = ''
Raspbian = ''
Redhat = ''
Ubuntu = ''
Windows = ''

[username]
format = ' [$user]($style) '
style_user = "bold blue"
style_root = "bold red"
show_always = true

[hostname]
format = '[@$hostname]($style) '
style = "bold #69abce"
trim_at = "."
ssh_only = true
disabled = false

#[env_var.STARSHIP_DISTRO]
#format = '[$env_value](white)'
#variable = "STARSHIP_DISTRO"
#disabled = false

[directory]
truncation_length = 0
truncate_to_repo = true
truncation_symbol = "repo:"

[character]
success_symbol = "[>](bold green)"
error_symbol = "[x](bold red)"
vicmd_symbol = "[<](bold green)"

[cmd_duration]
format = '\[[⏱ $duration]($style)\]'

[time]
disabled = false
time_format = "%T" # Hour:Minute Format
style = "bg:#1d2230"
format = '[[  $time ](fg:#a0a9cb bg:#2D353B)]($style)'

[git_branch]
format = '\[[$symbol$branch]($style)\]'

[git_status]
style = "white"
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"
deleted = "x"

[git_commit]
commit_hash_length = 7
format = "[\\($hashtag\\)]($style) "
style = "bold green"
only_detached = true
tag_disabled = false
tag_symbol = "🔖 "
disabled = false

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = "[🍒 PICKING](bold red)"

[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'

[c]
format = '\[[$symbol($version(-$name))]($style)\]'

[cmake]
format = '\[[$symbol($version)]($style)\]'

[conda]
format = '\[[$symbol$environment]($style)\]'

[docker_context]
format = '\[[$symbol]($style)\]'
only_with_files = true
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[golang]
format = '\[[$symbol($version)]($style)\]'

[java]
format = '\[[$symbol($version)]($style)\]'

[kotlin]
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
format = '\[[$symbol($version)]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol($version)]($style)\]'

[package]
format = '\[[$symbol$version]($style)\]'

[php]
format = '\[[$symbol($version)]($style)\]'

[python]
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'

[rlang]
format = "with [📐 $version](blue bold) "

[ruby]
format = '\[[$symbol($version)]($style)\]'

[rust]
format = '\[[$symbol($version)]($style)\]'

[swift]
format = '\[[$symbol($version)]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

