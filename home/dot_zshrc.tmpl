#zmodload zsh/zprof
{{- if eq .hostname "mbp" }}
# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"

export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/curl/bin:$PATH"
{{- end }}

{{- if eq .hostname "mini" }}
#export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/curl/bin:$PATH"
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
{{- end }}

# zsh
setopt AUTO_CD
setopt EXTENDED_GLOB

# znap
[[ -f $HOME/.znap/zsh-snap/znap.zsh ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git $HOME/.znap/zsh-snap
source $HOME/.znap/zsh-snap/znap.zsh
znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-completions
znap source ael-code/zsh-colored-man-pages
{{- if eq .osid "darwin" }}
znap source thirteen37/fzf-brew
{{- end }}
znap source jeffreytse/zsh-vi-mode
znap source zdharma-continuum/fast-syntax-highlighting
unset ZSH_AUTOSUGGEST_USE_ASYNC
fpath=($HOME/.znap/zsh-completions/src $fpath)
autoload -Uz compinit && compinit

# starship
#znap eval starship 'starship init zsh --print-full-init'
#znap prompt starship
export STARSHIP_CONFIG=$HOME/.starship.toml
eval "$(starship init zsh)"
{{ if eq .osid "darwin" }}
# network
export https_proxy=http://127.0.0.1:6152;export http_proxy=http://127.0.0.1:6152;export all_proxy=socks5://127.0.0.1:6153
alias nq='networkQuality'

# directory
hash -d dld=~/Downloads
hash -d dev=~/Developer
hash -d dbx=~/Dropbox
hash -d sur=~/Library/Mobile\ Documents/iCloud~com~nssurge~inc/Documents

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='--reverse --border'

# homebrew
alias brew="env PATH=\"${PATH/\/Users\/${USER}\/\.pyenv\/shims:/}\" brew"
alias bi='brew install'
alias bd='brew update'
alias bg='brew upgrade'
alias ci='brew install --cask'
alias bui='brew uninstall'
alias cui='brew uninstall --cask'
alias bcu='brew cu'
alias bs='brew search'
alias bl='brew leaves'
alias budg='brew update && brew upgrade'
alias bc='brew cleanup'
alias bdc='brew doctor'
alias binf='brew info'
alias bo='brew outdated'
alias bdp='brew deps'
alias bdpt='brew deps --tree'
{{- end }}
{{ if eq .hostname "mbp" }}
# gpg
export GPG_TTY=$(tty)
gpgconf --launch gpg-agent
alias enc="gpg -r 8F7941D4 -e"

# 1password
source $HOME/.config/op/plugins.sh
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
alias p1p="pass show -c 1Password"

# curl
export LDFLAGS="-L/opt/homebrew/opt/curl/lib"
export CPPFLAGS="-I/opt/homebrew/opt/curl/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/curl/lib/pkgconfig"

# java
export JENV_ROOT="$HOME/.jenv"
if [ -d "${JENV_ROOT}" ]; then
    export PATH="$JENV_ROOT/bin:$PATH"
    eval "$(jenv init - --no-rehash)"
    (jenv rehash &) 2> /dev/null
fi

# go
export GOPATH=$HOME/.go
export PATH=$PATH:$GOPATH/bin

# nodejs
export N_PREFIX=$HOME/.n
export PATH=$N_PREFIX/bin:$PATH

# python
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# r
export R_HOME=/Library/Frameworks/R.framework/Resources

# ruby
eval "$(rbenv init - zsh)"

# rust
. "$HOME/.cargo/env"

# container
alias lin="lima nerdctl"
alias lil="limactl"
alias clm="colima"
#export DOCKER_HOST='tcp://127.0.0.1:2375'
#export DOCKER_HOST=unix://$HOME/.lima/docker/sock/docker.sock
#export DOCKER_HOST=unix://$HOME/.colima/default/docker.sock
#export LIMA_SHELL=/usr/bin/zsh
#export LIMA_WORKDIR=/home/gagadesu.linux

# aliases
alias ala="alacritty"
alias dasl="sudo rm -rf /private/var/log/asl/*.asl"
alias ts="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
alias rud="cd ~/Developer/rime-ice && git pull origin main"
alias yabairl='launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"'
alias yabairc='nvim ~/.config/yabai/yabairc'

# projects
export PATH=$HOME/Developer/work/tools/gradle-2.4/bin:$PATH
{{- end }}

# general
{{ template "hostname" . }}
{{- if or (eq .osid "linux-debian") (eq .osid "linux-ubuntu") }}
export PATH=$(find $HOME/.local/bin -type d -name "bin" -print0 | xargs -0 printf "%s:" | sed 's/:$//'):$PATH
{{- end }}
export MY_DOMAIN_NAME=gachca.com
export UID=$(id -u)
export GID=$(id -g)
{{ if eq .osid "darwin" }}
export TZ=$(readlink /etc/localtime | sed 's|.*/zoneinfo/||')
{{- end }}
{{- if or (eq .osid "linux-debian") (eq .osid "linux-ubuntu") }}
export TZ=$(timedatectl show -p Timezone --value)
{{- end }}
export TZ=$(readlink /etc/localtime | awk -F'/zoneinfo/' '{print $2}')
eval "$(zoxide init zsh)"
alias zz="z -"
alias cl="clear"
alias tm="tmux"
alias tmn="tmux new"
alias tmk="tmux kill-session -t"
alias nv='nvim'
alias path="print -l $path"
alias cz="chezmoi"
alias czet="chezmoi execute-template"
alias d="docker"
alias dcud="docker compose up -d"
alias dcudf="docker compose up -d --force-recreate"
alias dcu="docker compose up"
alias dcd="docker compose down"
alias dcp="docker compose pull"
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g ......='../../../../..'
alias dus="du -smh * | sort -nr" # sort by size
alias lh='ls -d .*' # show hidden files/directories only
alias tgz='tar -czf' # compress file
alias ugz='tar -xzf' # decompress file
alias l="eza --sort Name"
alias ll="eza --sort Name --long --octal-permissions --hyperlink"
alias la="eza --sort Name --long --octal-permissions --hyperlink --all"
alias lt="eza --sort Name --long --octal-permissions --hyperlink --tree"
alias lta="eza --sort Name --long --octal-permissions --hyperlink --tree --all"
alias gl="git log --pretty=format:'%C(yellow)%h%C(reset) - %C(green)%an%C(reset), %C(blue)%ar%C(reset) (%C(magenta)%ad%C(reset)) : %C(red)%s%C(reset)' --date=format:'%Y-%m-%d %H:%M:%S'"
alias asb="ansible"
alias apb="ansible-playbook"

hash -d conf=$XDG_CONFIG_HOME
hash -d nv=$XDG_CONFIG_HOME/nvim/
hash -d ct=$XDG_CONFIG_HOME/containers/

source $HOME/.zsh_functions
{{ if eq .hostname "mbp" }}
# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/opt/homebrew/Caskroom/miniforge/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/opt/homebrew/Caskroom/miniforge/base/etc/profile.d/conda.sh" ]; then
#         . "/opt/homebrew/Caskroom/miniforge/base/etc/profile.d/conda.sh"
#     else
#         export PATH="/opt/homebrew/Caskroom/miniforge/base/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# # <<< conda initialize <<<

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
{{- end }}
{{ if or (eq .osid "linux-ubuntu") (eq .osid "linux-debian") }}
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
{{- end }}
#zprof
