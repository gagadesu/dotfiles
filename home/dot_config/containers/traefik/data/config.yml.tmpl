---
http:
  routers:
    immortalwrt:
      entryPoints:
        - "https"
      rule: "Host(`immortalwrt.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: immortalwrt
    ros:
      entryPoints:
        - "https"
      rule: "Host(`ros.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: ros
    r2:
      entryPoints:
        - "https"
      rule: "Host(`r2.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: r2
    nuc:
      entryPoints:
        - "https"
      rule: "Host(`nuc.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: nuc
    sw:
      entryPoints:
        - "https"
      rule: "Host(`sw.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: sw
    adguard:
      entryPoints:
        - "https"
      rule: "Host(`adguard.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: adguard
    nas:
      entryPoints:
        - "https"
      rule: "Host(`nas.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: nas
    ui:
      entryPoints:
        - "https"
      rule: "Host(`ui.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: ui
    haos:
      entryPoints:
        - "https"
      rule: "Host(`haos.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: haos
    plex:
      entryPoints:
        - "https"
      rule: "Host(`plex.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: plex
    jellyfin:
      entryPoints:
        - "https"
      rule: "Host(`jellyfin.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: jellyfin
    grafana:
      entryPoints:
        - "https"
      rule: "Host(`grafana.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: grafana
    istoreos:
      entryPoints:
        - "https"
      rule: "Host(`istoreos.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: istoreos
    # pihole:
    #   entryPoints:
    #     - "https"
    #   rule: "Host(`pihole.home.gachca.com`)"
    #   middlewares:
    #     - default-headers
    #     - addprefix-pihole
    #   tls: {}
    #   service: pihole
    myspeed:
      entryPoints:
        - "https"
      rule: "Host(`myspeed.home.gachca.com`)"
      middlewares:
        - default-headers
      tls: {}
      service: myspeed

  services:
    immortalwrt:
      loadBalancer:
        servers:
          - url: "http://10.0.6.1"
        passHostHeader: true
    ros:
      loadBalancer:
        servers:
          - url: "http://10.0.1.1"
        passHostHeader: true
    r2:
      loadBalancer:
        servers:
          - url: "https://10.0.1.2:8006"
        passHostHeader: true
    nuc:
      loadBalancer:
        servers:
          - url: "https://10.0.1.4:8006"
        passHostHeader: true
    sw:
      loadBalancer:
        servers:
          - url: "http://10.0.1.25"
        passHostHeader: true
    adguard:
      loadBalancer:
        servers:
          - url: "http://10.0.1.3:3000"
        passHostHeader: true
    # pihole:
    #   loadBalancer:
    #     servers:
    #       - url: "http://10.0.1.12:80"
    #     passHostHeader: true
    nas:
      loadBalancer:
        servers:
          - url: "https://10.0.1.9"
        passHostHeader: true
    ui:
      loadBalancer:
        servers:
          - url: "https://10.0.1.3:8443"
        passHostHeader: true
    haos:
      loadBalancer:
        servers:
          - url: "http://10.0.1.6:8123"
        passHostHeader: true
    plex:
      loadBalancer:
        servers:
          - url: "http://10.0.1.5:32400"
        passHostHeader: true
    jellyfin:
      loadBalancer:
        servers:
          - url: "http://10.0.1.5:8096"
        passHostHeader: true
    grafana:
      loadBalancer:
        servers:
          - url: "http://10.0.1.5:3003"
        passHostHeader: true
    istoreos:
      loadBalancer:
        servers:
          - url: "http://10.0.1.6"
        passHostHeader: true
    myspeed:
      loadBalancer:
        servers:
          - url: "http://10.0.1.3:5216"
        passHostHeader: true

  middlewares:
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"
    https-redirect:
      redirectScheme:
        scheme: https

    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlAllowHeaders: ["x-api-key, Origin, Authorization"]
        accessControlAllowOriginList: "*"
        accessControlAllowCredentials: true
        accessControlMaxAge: 100
        addVaryHeader: true

    idrac:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipWhiteList:
        sourceRange:
        - "10.0.0.0/8"
        - "192.168.0.0/16"
        - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers
